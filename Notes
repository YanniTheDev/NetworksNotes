OSI (Open Systems Interconnection) Model
Layer 1: Physical Layer
Layer 2: Data Link Layer
Layer 3: Network Layer
Layer 4: Transport Layer
Layer 5: Session Layer
Layer 6: Presentation Layer
Layer 7: Application Layer



HyperText Transfer Protocol (HTTP) - Application Layer (7)
Created by Tim Berners-Lee in 1989.
Transfer HyperText, such as HTML, from a server to the client's computer.
It functions as a simple conversation between the client and the server. Uses a request/reponse pattern for solving the problem of reliable communication between the client and the server. 
Requests and responses can have other data or resources sent along with it, such as an user ID.
Nine types of requests:
GET request - returns what you asked for. Such as a piece an HTML element
HEAD request - returns information about what you will get if you did a GET request. For example, a GET request on a file download will download the file, but a HEAD request will be able to tell the client how big the file is.
POST request - allows clients to send information in the other direction. Clients can replace a resource or data on the server with something they supply with the request. These use something that is called a Uniform Resource Identifier or URI. 
URI is a unique code or numbe for a resource.
PUT request - similar to POST request. However, if the resource already exists with the same URI, it is modified with the new one.
DELETE request - deletes a resource.
CONNECT request - starts a two-way communications with the requested resource. It can be used to open a tunnel. For example, the CONNECT method can be used to access websites that use TLS. The client asks an HTTP Proxy server to tunnel the TCP connection to the desired 
connection. The proxy server then proceeds to make the connection on behalf of the client. Once the connection is established, the proxy server continues to relay the TCP stream to and from the client.
PATCH request - allows the client to do a partial modification of a resource.
The first line of a response is the status line and has a numeric status code such as 404 and text-based reason phrase such as "Not Found". The most common is 200 and this means successful or "OK". The status codes are primarily divided into five groups for better 
explanation of requests, and responses between client and server are named by purpose and a number: Informational 1XX, Successful 2XX, Redirection 3XX, Client Error 4XX, and Server Error 5XX. 

Internet Chat Relay (IRC) - Application Layer (7)
It is a system that lets you transfer messages in the form of text. It is essentially a chat protocol. It uses a client-server model. Clients are chat programs installed on a user's computer that connects to a central server. The clients communicate the message to the central 
server which in turns relays that to other clients. This protocol was originally designed for group communication in discussion forums, called channels. IRC also supports private messages, and file and data transfer. IRC allows users to use commands to interact with the server, 
client, or other users. For example, /DIE will tell the server to shutdown, etc. IRC is similar to Discord. Groups exist in the forms of channels. A server hosts many channels, and you can choose which one to join. Each channel usually form around on topic. 
Convention dictates that channel names start with one or two # symbols.

Transimission Control Protocol (TCP) - Transport Layer 4
Breaks up large messages into something called packets. A packet is a segment of data that, when combined with other packets, make up one whole message. Things like websites are broken into packets, then sent over the Internet.
The receiving computer reassembles the packets back into the whole message. Breaking it up into packets makes it so that the data is easier to transfer through the Internet. Some packets can get to the destination first, while if the 
message was being sent as a whole, it will have to wait a long time for the message to come.
However, sometimes the packets can get either lost, corrupted, or delayed, when travelling through the Internet. If this was not fixed, the image either would not load, have missing bits, corrupted, all everything. Packets experience these troubles
because they go through various nodes. These nodes are basically different routers or computers. One route might experience more interference (causing packet loss), another might be faster or slower than another (causing packets to become out of order). Corruption
can happen at any time through electric interference. TCP is a protocol that solves these issues.
Computers first do a TCP handshake, which is two computers telling each other that they will be using TCP for data transfer, and making sure the connection is continued throughout the data transfer. Then, they do something called ordering. TCP puts something called a
sequence number on each of the packets, which signifies its order number. With the sequence number, the receiving computer can re-order the packets into the correct order. If the packets are out of order, TCP will wait until all of the packets arrive, then puts them 
back in order. Another concept is called checksums. Checksums is a little piece of data in the data that is being transferred. If the data gets corrupted, then the checksum will detect it, and in some cases, will repair that error. TCP uses something called acknowledgement
(ACK) and negative acknowledgement (NACK) messages to re-send data. ACKs are sent to the sending computer from the receiving computer to tell the sending computer the data has arrived and it is usable. NACKs are sent when the data arrives, but is damaged and cannot be
used, so the sending computer has to send the packet again. ACKs and NACKs are useful because they allow communication in the opposite direction. Finally, the sending computer will resend a packet if it has not receiving an ACK or NACK after some time for that specific
packet. This is called a timeout. Sometimes, ACKs can actually get lost too, but TCP ignores duplicates.

User Datagram Protocol (UDP) - Transport Layer 4
This is similar to TCP, however this protocol does not guarantee delivery. UDP does not do anything for duplicate packets, lost packets, or out of order packets. All it does is it gets the bulk of the data to one place. Checksums are still used to make sure the data is
not corrupted. The packets of data still have formal packet structure, as it includes destination, origin, and packet size. UDP is usually used for "unimportant" data transfer, such as music, video, and VOIP. For example, sometimes video calls on Skype can suddenly become
very poor quality, and that is because UDP has lost some packets in the transfer process. However, the bulk of the data has been transferred successfully, so the user can still see the overall picture and the conversation can function fine.
